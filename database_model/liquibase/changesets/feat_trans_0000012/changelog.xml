<?xml version="1.0" encoding="UTF-8"?>

	<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
    http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd"
	
	logicalFilePath="feat_trans_0000012/changelog.xml">

	<changeSet author="patrick_schmitz" id="feat_trans_0000012" context="i18n,perspective">
		<sql stripComments="false" splitStatements="false">
		<![CDATA[
			CREATE TABLE perspective_filter_log (
			   log_id INTEGER NOT NULL  DEFAULT NULL PRIMARY KEY AUTOINCREMENT,
			   log_datetime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
			   log_action TEXT,
			   id INTEGER,
			   uuid TEXT,
			   fk_language_id TEXT(32),
			   -- fk_language_uuid TEXT(32),
			   fk_object_type_id INTEGER,
			   fk_object_type_uuid TEXT,
			   filter_attribute_name TEXT(150),
			   filter_value TEXT(150),
			   ref_fk_object_type_id INTEGER
			);
		]]>		
		</sql>

		<sql stripComments="false" splitStatements="false">
		<![CDATA[
			DROP TRIGGER IF EXISTS TRIG_perspective_filter_log_INSERT;
		]]>		
		</sql>
		
		<sql stripComments="false" splitStatements="false">
		<![CDATA[
			CREATE TRIGGER TRIG_perspective_filter_log_INSERT AFTER INSERT
			ON perspective_filter
			BEGIN
			   INSERT INTO _newUUID (uuid) VALUES (hex(randomblob(16)));
			   INSERT INTO perspective_filter_log (log_action, id,uuid,fk_language_id, fk_object_type_id, fk_object_type_uuid,filter_attribute_name,filter_value,ref_fk_object_type_id) VALUES ('INSERT',new.id,(SELECT uuid FROM _newUUID),new.fk_language_id, new.fk_object_type_id, (SELECT uuid FROM object_type WHERE id=new.fk_object_type_id),new.filter_attribute_name,new.filter_value,new.ref_fk_object_type_id);
			   UPDATE perspective_filter SET uuid=(SELECT uuid FROM _newUUID) WHERE id=new.id;
			   DELETE FROM _newUUID;
			   DELETE FROM perspective_filter_log WHERE log_id=(SELECT MAX(log_id)+1 FROM perspective_filter_log WHERE log_action='INSERT' AND id=new.id) AND log_action='UPDATE' AND id=new.id; --Aufraeumen des ungewollten Datensatz beim INSERT (erzeugt durch den UPDATE TRIGGER)
			END;
		]]>		
		</sql>

		<sql stripComments="false" splitStatements="false">
		<![CDATA[
			DROP TRIGGER IF EXISTS TRIG_perspective_filter_log_UPDATE;
		]]>		
		</sql>

		<sql stripComments="false" splitStatements="false">
		<![CDATA[
			CREATE TRIGGER TRIG_perspective_filter_log_UPDATE AFTER UPDATE
			ON perspective_filter
			BEGIN
			   INSERT INTO _newUUID (uuid) VALUES (hex(randomblob(16)));
			   UPDATE perspective_filter SET uuid=(SELECT uuid FROM _newUUID) WHERE id=new.id;
			   INSERT INTO perspective_filter_log (log_action, id,uuid,fk_language_id, fk_object_type_id, fk_object_type_uuid,filter_attribute_name,filter_value,ref_fk_object_type_id) VALUES ('UPDATE',new.id,(SELECT uuid FROM _newUUID),new.fk_language_id, new.fk_object_type_id, (SELECT uuid FROM object_type WHERE id=new.fk_object_type_id),new.filter_attribute_name,new.filter_value,new.ref_fk_object_type_id);
			   DELETE FROM _newUUID;
			END;
		]]>		
		</sql>

		<sql stripComments="false" splitStatements="false">
		<![CDATA[
			DROP TRIGGER IF EXISTS TRIG_perspective_filter_log_DELETE;
		]]>		
		</sql>

		<sql stripComments="false" splitStatements="false">
		<![CDATA[
			CREATE TRIGGER TRIG_perspective_filter_log_DELETE AFTER DELETE
			ON perspective_filter
			BEGIN
			   INSERT INTO perspective_filter_log (log_action, id,uuid,fk_language_id, fk_object_type_id, fk_object_type_uuid,filter_attribute_name,filter_value,ref_fk_object_type_id) VALUES ('DELETE',old.id,old.uuid,old.fk_language_id, (SELECT uuid FROM language WHERE id=old.fk_language_id),old.fk_object_type_id, (SELECT uuid FROM object_type WHERE id=old.fk_object_type_id),old.filter_attribute_name,old.filter_value,old.ref_fk_object_type_id);
			END;
		]]>		
		</sql>
			
		<comment>
		<![CDATA[
		Table for perspective_filter_log and corresponding TRIGGER.
		Used objects:
			perspective_filter_log
			TRIG_perspective_filter_log_INSERT
			TRIG_perspective_filter_log_UPDATE
			TRIG_perspective_filter_log_DELETE
		]]>
		</comment>
</changeSet>
</databaseChangeLog>
